# Connect Message:
## format
```
{"command": "CONNECT", "args": {"serializer": <Serializer of Queue>} }
```
## Usage
```
Client -> Broker
```
To Specify which serializer the client uses.
## Observation
It can only be serialized in json, as the broker still do not know which serialization method the client uses yet.


# Publish Message:
## format
```
{"command": "PUBLISH", "args": {"topic": <Topic of Queue>, "value": <Value>} }
```
## Usage
```
Producer -> Broker
```
When the Producer wants to publish a value in a specific topic
```
Broker -> Consumer
```
When the Consumer subscribes to a topic, or when a Producer publishs a new value on the same topic, the Consumer receives
this message as an answer.


# Subscribe Message:
## format
```
{"command": "SUBSCRIBE", "args": {"topic": <Topic of Queue>} }
```
## Usage
```
Consumer -> Broker
```
When the Consumer subscribes to a topic, it receives a Publish Message with the value of that topic, or it gets
notified when that is a new value published value on that topic.


# Cancel Subscription Message:
## format
```
{"command": "CANCEL_SUBSCRIPTION", "args": {"topic": <Topic of Queue>} }
```
## Usage
```
Consumer -> Broker
```
When the Consumer wants to stop being notified with new values on a specific topic.


# Request List of Topics Message:
## format
```
{"command": "REQUEST_LIST_TOPICS" }
```
## Usage
```
Client -> Broker
```
When the client wants to receive a list of all the topics in which there is a published value, it receives as an
answer, a Response List of Topics Message.


# Response List of Topics Message:
## format
```
{"command": "RESPONSE_LIST_TOPICS", args: {"list_topics": <list_of_topics>} }
```
## Usage
```
Broker -> Client
```
The answer for the Response List of Topics Message.


# Serialization of Messages
All messages can be serialized in three types, json, xml and pickle, except the Connect Message, which must be serialized
only by json type.